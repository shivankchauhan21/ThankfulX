// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  email         String        @unique
  name          String?
  password      String    // Hashed password
  role          Role      @default(USER)
  credits       Int          @default(0)
  isActive      Boolean   @default(true)
  lastLoginAt   DateTime?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  // Relations
  messages      Message[]
  organizations Organization[] // Many-to-many relation with organizations

  @@map("users")
}

model Organization {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  messages  Message[]
  users     User[]    // Many-to-many relation with users
}

model Message {
  id                String       @id @default(uuid())
  content           String
  style             String
  length            String
  language          String
  customerName      String
  products          String
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  user              User         @relation(fields: [userId], references: [id])
  userId            String
  organization      Organization? @relation(fields: [organizationId], references: [id])
  organizationId    String?      // Optional organization reference

  @@map("messages")
}

enum Role {
  USER
  ADMIN
  SUPER_ADMIN
}
